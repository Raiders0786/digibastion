
import { SecurityCategory } from "../../types/security";

export const defiData: SecurityCategory = {
  id: "defi",
  title: "DeFi Security",
  description: "Secure your DeFi interactions and investments",
  icon: "wallet-2",
  items: [
    {
      id: "defi-1",
      title: "Hardware Wallet Integration",
      description: "Secure high-value DeFi positions",
      completed: false,
      level: "essential",
      details: "Use hardware wallets for storing and managing large DeFi positions. Never keep significant amounts in hot wallets.",
      links: [
        { text: "Hardware Wallet Guide", url: "https://www.ledger.com/academy/security/the-safest-way-to-use-hardware-wallets" }
      ]
    },
    {
      id: "defi-2",
      title: "Independent Security Audits",
      description: "Verify protocol security",
      completed: false,
      level: "essential",
      details: "Third-party audits are key to uncovering vulnerabilities. Always verify multiple audit reports and community feedback before interacting with protocols.",
    },
    {
      id: "defi-3",
      title: "Smart Contract Addresses Verification",
      description: "Verify contract transparency",
      completed: false,
      level: "essential",
      details: "Ensure all smart contract addresses are publicly available and verified on blockchain explorers for transparency.",
    },
    {
      id: "defi-4",
      title: "Public Team Identity",
      description: "Verify team transparency",
      completed: false,
      level: "essential",
      details: "Verify the identity of the protocol team members, their track record, and ensure accountability through public profiles.",
    },
    {
      id: "defi-5",
      title: "Public Software Repository",
      description: "Check code transparency",
      completed: false,
      level: "essential",
      details: "Verify that the protocol has a public software repository that enables community review and accountability.",
    },
    {
      id: "defi-6",
      title: "Software Architecture Documentation",
      description: "Review system design",
      completed: false,
      level: "essential",
      details: "A clear architectural overview is crucial for assessing the system's design and potential vulnerabilities.",
    },
    {
      id: "defi-7",
      title: "Contract Source Code Documentation",
      description: "Verify code documentation",
      completed: false,
      level: "essential",
      details: "Detailed documentation of deployed contracts aids security reviews and audits.",
    },
    {
      id: "defi-8",
      title: "Documentation-Implementation Traceability",
      description: "Verify documentation accuracy",
      completed: false,
      level: "recommended",
      details: "Ensure that what's documented accurately reflects the actual deployed code.",
    },
    {
      id: "defi-9",
      title: "Deployed Code Testing",
      description: "Verify testing practices",
      completed: false,
      level: "essential",
      details: "Regular testing with high coverage confirms code behavior and helps uncover hidden issues.",
    },
    {
      id: "defi-10",
      title: "Detailed Test Reports",
      description: "Review test results",
      completed: false,
      level: "recommended",
      details: "Clear test results help pinpoint weaknesses and validate security claims.",
    },
    {
      id: "defi-11",
      title: "Audit Applicability Matrix",
      description: "Verify audit coverage",
      completed: false,
      level: "recommended",
      details: "A detailed matrix showing which parts of the code were audited helps understand security coverage.",
    },
    {
      id: "defi-12",
      title: "Bug Bounty Program",
      description: "Check security incentives",
      completed: false,
      level: "recommended",
      details: "A competitive bounty program incentivizes external security researchers to find and report vulnerabilities.",
    },
    {
      id: "defi-13",
      title: "Protocol Monitoring Systems",
      description: "Check ongoing security",
      completed: false,
      level: "recommended",
      details: "Continuous monitoring of both back-end and front-end helps detect issues in real time.",
    },
    {
      id: "defi-14",
      title: "Code Upgradeability Assessment",
      description: "Verify governance mechanisms",
      completed: false,
      level: "essential",
      details: "Understand if and how code changes can occur post-deployment through upgradeability mechanisms.",
    },
    {
      id: "defi-15",
      title: "Administrative Control Structure",
      description: "Verify admin controls",
      completed: false,
      level: "essential",
      details: "Clear explanation of admin addresses, roles, capabilities, and multi-sig arrangements reduces centralization risks.",
    },
    {
      id: "defi-16",
      title: "Transaction Signing Policy",
      description: "Verify governance process",
      completed: false,
      level: "recommended",
      details: "A clear signing policy ensures that all critical transactions are properly vetted and authorized.",
    },
    {
      id: "defi-17",
      title: "Developer Responsiveness",
      description: "Verify team engagement",
      completed: false,
      level: "essential",
      details: "Quick, clear responses to security reports help in rapid issue resolution.",
    },
    {
      id: "defi-18",
      title: "Formal Verification",
      description: "Check mathematical proofs",
      completed: false,
      level: "recommended",
      details: "While not always feasible, formal verification adds an extra layer of security assurance.",
    }
  ],
  longDescription: "Comprehensive security measures for DeFi protocols covering code transparency, documentation, testing, auditing, monitoring, and administrative controls."
};
